import sys
import time

start_time = time.time()

Chromosome = []
for num in range(1, 23):
    Chromosome.append('chr'+str(num))
Chromosome.extend(['chrX', 'chrY'])

with open('piloit.bed', 'r') as bed:
    bed_pos = {}
    for bed_line in bed:
        bed_line = bed_line.strip()
        bed_line_list = bed_line.split('\t')
        bed_chr = bed_line_list[0]
        bed_start = bed_line_list[1]
        bed_end = bed_line_list[2]
        bed_enrich = bed_line_list[6]
        bed_pos[bed_chr + " " + bed_start + " " + bed_end] = {}

with open('MD2_pilot.txt', 'r') as CpG:
    CpG_info = {}
    for cpg_line in CpG:
        cpg_line = cpg_line.strip()
        cpg_line_list = cpg_line.split('\t')
        cpg_chr = cpg_line_list[0]
        cpg_pos = cpg_line_list[1]
        cpg_character = []
        for num in range(2, len(cpg_line_list)):
            cov = cpg_line_list[num].split(';')[0:2]
            cov = ','.join(cov)
            cpg_character.append(cov)
        CpG_info[cpg_chr+" "+cpg_pos] = cpg_character


check_duplicate = []
Total_merge = {}

for chromo in Chromosome:
    for key_bed in bed_pos.keys():
        chromosome = key_bed.split(" ")[0]
        if chromo == chromosome:
            start = key_bed.split(" ")[1]
            end = key_bed.split(" ")[2]
            if key_bed in Total_merge:
                continue
            else:
                for key_cpg in CpG_info.keys():
                    if chromo == key_cpg.split(" ")[0]:
                        CpG_site = key_cpg.split(" ")[1]
                        if CpG_site in check_duplicate:
                            continue
                        else:
                            if int(start) <= int(CpG_site) <= int(end):
                                if key_bed not in Total_merge:
                                    Total_merge[key_bed] = CpG_info[key_cpg]
                                    check_duplicate.append(CpG_site)
                                else:
                                    Total_merge[key_bed] += CpG_info[key_cpg]
                                    check_duplicate.append(CpG_site)
                            else:
                                pass




with open("result.txt",'w') as handle:
    for key in Total_merge.keys():
        handle.write(key + '\t' + str(Total_merge[key]) + '\n')


with open("result.txt", 'r' ) as handle:
    for line in handle:
        line = line.strip().split('\t')
        Description = line[1]
        Description = Description.replace('[','')
        Description = Description.replace(']','')
        Description = Description.replace("'",'')
        Description = Description.replace(" ",'')
        Description = Description.split(",")
        Description = list(map(int, Description))
        print(line[0] + '\t' + str(sum(Description[0::6])) +'\t' + str(sum(Description[1::6])) +'\t' + str(sum(Description[2::6]))+'\t'+ str(sum(Description[3::6]))+'\t'+str(sum(Description[4::6]))+'\t'+str(sum(Description[5::6])))

print("Working Time {} sec".format(time.time() - start_time))
